#!/usr/bin/env bash
# -*- bash -*-

# This script is used to run backups on a single machine,
# determine the correct parent and possibly deleting it if needed

fifo=/opt/local/bin/fifo
vm="$2"

case $1 in
    monthly)
        $fifo vms backups $vm create monthly
        last_daily=$($fifo vms backups $vm list -pH --fmt uuid,comment,local | grep 'daily' | grep 'Yes' | tail -1)
        if [ ! -z "$last_daily" ]
        then
            daily_uuid=$(echo $last_daily | cut -d: -f1)
            $fifo vms backups $vm delete -l $daily_uuid
        fi
        last_weekly=$($fifo vms backups $vm list -pH --fmt uuid,comment,local | grep 'weekly' | grep 'Yes' | tail -1)
        if [ ! -z "$last_weekly" ]
        then
            weekly_uuid=$(echo $last_weekly | cut -d: -f1)
            $fifo vms backups $vm delete -l $weekly_uuid
        fi
        ;;
    weekly)
        last_backup=$($fifo vms backups $vm list -pH --fmt uuid,comment,local | grep 'monthly\|weekly' | grep 'Yes' | tail -1)
        uuid=$(echo $last_backup | cut -d: -f1)
        type=$(echo $last_backup | cut -d: -f2)
        $fifo vms backups $vm create --parent $uuid -d weekly
        last_daily=$($fifo vms backups $vm list -pH --fmt uuid,comment,local | grep 'daily' | grep 'Yes' | tail -1)
        if [ ! -z "$last_daily" ]
        then
            daily_uuid=$(echo $last_daily | cut -d: -f1)
            $fifo vms backups $vm delete -l $daily_uuid
        fi
        ;;
    daily)
        last_backup=$($fifo vms backups $vm list -pH --fmt uuid,comment,local | grep 'daily\|weekly\|monthly' | grep 'Yes' | tail -1)
        uuid=$(echo $last_backup | cut -d: -f1)
        type=$(echo $last_backup | cut -d: -f2)
        case $type in
            weekly|monthly)
                $fifo vms backups $vm create --parent $uuid daily
                ;;
            daily)
                $fifo vms backups $vm create --parent $uuid -d daily
                ;;
        esac
        ;;
esac
